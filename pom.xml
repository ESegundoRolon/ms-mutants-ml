<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
  <modelVersion>4.0.0</modelVersion>
  <groupId>org.github.erolon</groupId>
  <artifactId>ms-mutants-ml</artifactId>
  <packaging>jar</packaging>
  <version>1.3-SNAPSHOT</version>
  <name>ms-mutants-ml</name>
  <description>ML-Challenge</description>

  <properties>
    <java.version>1.8</java.version>
    <maven.compiler.source>${java.version}</maven.compiler.source> <!-- REQUIRED -->
    <maven.compiler.target>${java.version}</maven.compiler.target> <!-- REQUIRED -->
    <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
    <appengine.maven.plugin>1.3.2</appengine.maven.plugin>
    <appengine.sdk.version>1.9.60</appengine.sdk.version>
	<docker.image.prefix>esegundorolon</docker.image.prefix>
     <!-- Name of Docker image that will be built. -->
     <docker.image.name>ms-mutants-ml</docker.image.name>
     <docker.image.src.root>src/main/resources/docker</docker.image.src.root>
     <docker.build.directory>${project.build.directory}/docker</docker.build.directory>         
  </properties>

  <dependencies>
    <dependency>
      <groupId>org.springframework.boot</groupId>
      <artifactId>spring-boot-starter-web</artifactId>
      <version>1.5.9.RELEASE</version>
    </dependency>

    <dependency>
      <groupId>org.springframework.boot</groupId>
      <artifactId>spring-boot-starter-test</artifactId>
      <version>1.5.9.RELEASE</version>
      <scope>test</scope>
    </dependency>
<dependency>

    <groupId>org.dizitart</groupId>

    <artifactId>nitrite</artifactId>

    <version>1.0</version>
    </dependency>

  </dependencies>

  <build>
    <plugins>
      <plugin>
        <groupId>org.springframework.boot</groupId>
        <artifactId>spring-boot-maven-plugin</artifactId>
        <version>1.5.7.RELEASE</version>
        <executions>
          <execution>
            <goals>
              <goal>repackage</goal>
            </goals>
          </execution>
        </executions>
      </plugin>
		<plugin>
		      <artifactId>maven-resources-plugin</artifactId>
		      <executions>
		          <execution>
		              <id>copy-resources</id>
		              <phase>package</phase>
		              <goals>
		                  <goal>copy-resources</goal>
		              </goals>
		              <configuration>
		                  <outputDirectory>${docker.build.directory}</outputDirectory>
		                  <resources>
		                      <resource>
		                          <directory>${docker.image.src.root}</directory>
		                          <filtering>false</filtering>
		                      </resource>
		                  </resources>
		              </configuration>
		          </execution>
		      </executions>
		  </plugin>

	 <plugin>
      <groupId>org.apache.maven.plugins</groupId>
      <artifactId>maven-dependency-plugin</artifactId>
      <executions>
          <execution>
              <id>copy</id>
              <phase>package</phase>
              <goals>
                  <goal>copy</goal>
              </goals>
              <configuration>
                  <artifactItems>
                      <artifactItem>
                          <groupId>${project.groupId}</groupId>
                          <artifactId>${project.artifactId}</artifactId>
                          <version>${project.version}</version>
                          <type>jar</type>
                          <overWrite>true</overWrite>
                          <outputDirectory>${docker.build.directory}</outputDirectory>
                          <destFileName>${project.build.finalName}.jar</destFileName>
                      </artifactItem>

                  </artifactItems>
                  <outputDirectory>${docker.build.directory}-${project.version}.jar</outputDirectory>
                  <overWriteReleases>true</overWriteReleases>
                  <overWriteSnapshots>true</overWriteSnapshots>
              </configuration>
          </execution>
      </executions>
  </plugin>
  <plugin>
    <groupId>com.spotify</groupId>
    <artifactId>docker-maven-plugin</artifactId>
    <version>0.4.13</version>
    <executions>
        <execution>
            <id>remove-image</id>
            <phase>clean</phase>
            <goals>
                <goal>removeImage</goal>
            </goals>
            <configuration>
                <imageName>${docker.image.name}</imageName>
                <imageTags>
                    <imageTag>${project.version}</imageTag>
                </imageTags>
                <verbose>true</verbose>
            </configuration>
        </execution>
    </executions>
</plugin>
	 <plugin>
         <groupId>com.spotify</groupId>
         <artifactId>dockerfile-maven-plugin</artifactId>
         <version>1.2.2</version>
         <executions>
             <execution>
                 <id>default</id>
                 <phase>package</phase>
                 <goals>
                     <goal>build</goal>
                 </goals>
             </execution>
         </executions>
         <configuration>
             <contextDirectory>${project.build.directory}/docker</contextDirectory>
             <buildArgs>
		     	<JAR_FILE>${project.build.finalName}.jar</JAR_FILE>
		     	<outputDirectory>${docker.build.directory}</outputDirectory>
		     </buildArgs>
             <writeTestMetadata>false</writeTestMetadata>
             <dockerInfoDirectory></dockerInfoDirectory>
             <verbose>true</verbose>
             <forceCreation>true</forceCreation>
             <imageName>${docker.image.name}</imageName>
             <repository>${docker.image.name}</repository>
             <tag>${project.version}</tag>
             <forceTags>true</forceTags>
             <pullNewerImage>false</pullNewerImage>
             <imageTags>
                 <imageTag>${project.version}</imageTag>
             </imageTags>
             <dockerDirectory>${project.build.directory}/docker</dockerDirectory>
         </configuration>
     </plugin>
	
    </plugins>
</build>
</project>
